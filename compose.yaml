services:
  minio:
    restart: always
    image: quay.io/minio/minio
    container_name: mlflow_minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_STORAGE_USE_HTTPS=false
    expose:
      - "9000"
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - backend
      - frontend

  db:
    restart: always
    image: postgres
    container_name: mlflow_db
    expose:
      - "5432"
    ports:
      - 5432:5432
    networks:
      - backend
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data

  mlflow:
    build: ./docker/mlflow
    image: mlflow_service
    container_name: mlflow_service
    ports:
      - 5000:5000
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_IGNORE_TLS=true
    command: mlflow server --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@db:5432/${PG_DATABASE} --artifacts-destination s3://mlflow --host 0.0.0.0
    depends_on:
      - minio
      - db
    networks:
      - backend
      - frontend

volumes:
  minio_data:
  pgdata:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
