services:
  minio:
    restart: always
    image: quay.io/minio/minio
    container_name: mlflow_minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_STORAGE_USE_HTTPS=false
    expose:
      - "9000"
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - backend
      - frontend

  db:
    restart: always
    image: postgres
    container_name: mlflow_db
    expose:
      - "5432"
    ports:
      - 5432:5432
    networks:
      - backend
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data

  prefect_db:
    restart: always
    image: postgres
    container_name: prefect_db
    ports:
      - 5433:5432
    networks:
      - backend
    environment:
      - POSTGRES_USER=${PREFECT_PG_USER}
      - POSTGRES_PASSWORD=${PREFECT_PG_PASSWORD}
      - POSTGRES_DB=${PREFECT_PG_DATABASE}
    volumes:
      - prefectdata:/var/lib/postgresql/data

  app:
    restart: always
    build: ./insurance-sell-service
    image: app
    container_name: app
    ports:
      - 8000:8000
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - PREFECT_API_URL=http://prefect:4200/api
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - mlflow
      - minio
      - prefect
    networks:
      - backend

  mlflow:
    restart: always
    build: ./docker/mlflow
    image: mlflow_service
    container_name: mlflow_service
    ports:
      - 5000:5000
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_IGNORE_TLS=true
    command: mlflow server --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@db:5432/${PG_DATABASE} --artifacts-destination s3://mlflow --host 0.0.0.0
    depends_on:
      - minio
      - db
    networks:
      - backend
      - frontend
  
  prefect:
    restart: always
    image: prefecthq/prefect:3-latest
    container_name: prefect_service
    ports:
      - 4200:4200
    environment:
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_UI_URL=http://localhost:4200/api
      - PREFECT_API_URL=http://localhost:4200/api
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${PREFECT_PG_USER}:${PREFECT_PG_PASSWORD}@prefect_db:5432/${PREFECT_PG_DATABASE}
    command: prefect server start
    depends_on:
      - prefect_db
    volumes:
      - prefect:/root/.prefect
    networks:
      - backend
      - frontend

volumes:
  minio_data:
  pgdata:
  prefect:
  prefectdata:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
